swap :: ent v[15], ent i, ent j -> nada {
    ent temp = v[i]
    v[i] = v[j]
    v[j] = temp
}

quicksort :: ent v[15], ent izq, ent der -> nada {
    si (izq >= der) {
        retorna
    }
    swap(v, izq, (izq + der)/2)

    ent pivotdest

    para (ent i = izq + 1; i <= der; i+1) {
        si (v[i] < v[izq]) {
            pivotdest = pivotdest + 1
            swap(v, pivotdest, i)
        }
    }

    swap(v, izq, pivotdest)
    quicksort(v,izq,pivotdest -1)
    quicksort(v, pivotdest+1, der)
}

enie :: ~ {
    ent v[15]  
    quicksort(v, 0, 15)
}
